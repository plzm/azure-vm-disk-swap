name: Cleanup

on: 
  workflow_dispatch:

jobs:
  cleanup:
    name: Clean up all Azure Resources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Make scripts executable
        run: |
          find ./scripts -type f -exec chmod +x {} \;

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Environment Variables
        if: success()
        run: |
          ./scripts/set-env-vars.sh

      - name: Delete Resource Group "${{ env.RG_NAME_VM_PROD }}"
        if: success()
        continue-on-error: true
        run: az group delete --subscription "${{ env.SUBSCRIPTION_ID }}" -n "${{ env.RG_NAME_VM_PROD }}" --yes --verbose

      - name: Delete Resource Group "${{ env.RG_NAME_VM_SOURCE }}"
        continue-on-error: true
        run: az group delete --subscription "${{ env.SUBSCRIPTION_ID }}" -n "${{ env.RG_NAME_VM_SOURCE }}" --yes --verbose

      - name: Delete Resource Group "${{ env.RG_NAME_GALLERY }}"
        continue-on-error: true
        run: az group delete --subscription "${{ env.SUBSCRIPTION_ID }}" -n "${{ env.RG_NAME_GALLERY }}" --yes --verbose

      - name: Delete Resource Group "${{ env.RG_NAME_SECURITY }}"
        continue-on-error: true
        run: az group delete --subscription "${{ env.SUBSCRIPTION_ID }}" -n "${{ env.RG_NAME_SECURITY }}" --yes --verbose

      - name: Delete Resource Group "${{ env.RG_NAME_NET }}"
        continue-on-error: true
        run: az group delete --subscription "${{ env.SUBSCRIPTION_ID }}" -n "${{ env.RG_NAME_NET }}" --yes --verbose

      - name: Azure logout
        if: always()
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
